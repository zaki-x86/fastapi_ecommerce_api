version: '3.7'
services:
  db:
    image: postgres:15
    container_name: ecommerce_db
    volumes:
      - postgresdata:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "5433:5432"

  redis:
    image: redis:7
    container_name: ecommerce_redis

  ecommerce:
    build:
      context: .
    env_file:
      - .env
    container_name: ecommerce_app
    depends_on:
      - db
      - redis
    # command: [ "/ecommerce/docker/app.sh" ]
    command: sh -c "alembic upgrade head && python3 src/utils/launch.py && python3 src/utils/insert_data.py && gunicorn src.main:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind=0.0.0.0:8000"
    ports:
      - "8000:8000"

  celery:
    build:
      context: .
    container_name: ecommerce_celery
    command: [ "/ecommerce/docker/celery.sh", "celery" ]
    env_file:
      - .env
    depends_on:
      - redis

  flower:
    build:
      context: .
    container_name: ecommerce_flower
    command: [ "/ecommerce/docker/celery.sh", "flower" ]
    env_file:
      - .env
    depends_on:
      - redis
    ports:
      - "5555:5555"

  prometheus:
    image: prom/prometheus:v2.43.0
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheusdata:/prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:9.4.7
    container_name: grafana
    volumes:
      - grafanadata:/var/lib/grafana
    restart: unless-stopped
    ports:
      - "3000:3000"

volumes:
  postgresdata:
  grafanadata:
  prometheusdata: