"""Changed the name of pibot table

Revision ID: 244b4ee8258e
Revises: cdf01a3f71c4
Create Date: 2024-03-04 09:48:02.918012

"""
from typing import Sequence, Union

import fastapi_users_db_sqlalchemy
import sqlalchemy as sa
from alembic import op


# revision identifiers, used by Alembic.
revision: str = "244b4ee8258e"
down_revision: Union[str, None] = "cdf01a3f71c4"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "address_user",
        sa.Column(
            "user_id",
            fastapi_users_db_sqlalchemy.generics.GUID(),
            nullable=False,
        ),
        sa.Column(
            "address_id",
            fastapi_users_db_sqlalchemy.generics.GUID(),
            nullable=False,
        ),
        sa.Column("is_default", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["address_id"], ["addresses.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("user_id", "address_id"),
    )
    op.drop_table("user_addresses")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user_addresses",
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "address_id", sa.UUID(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "is_default", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["address_id"],
            ["addresses.id"],
            name="user_addresses_address_id_fkey",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name="user_addresses_user_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "user_id", "address_id", name="user_addresses_pkey"
        ),
    )
    op.drop_table("address_user")
    # ### end Alembic commands ###
